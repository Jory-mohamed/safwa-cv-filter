# app.py
# โ ุชุทุจูู CV Filter ุฎูููุ ูุนูู ูุจุงุดุฑุฉ ุนูู Streamlit ุจุฏูู ุชุจุนูุงุช ุฎุงุฑุฌูุฉ โ
# ููุงุญุธุงุช:
# - ูุง ูุญุชุงุฌ ููุชุจุงุช ุงุณุชุฎุฑุงุฌ PDF/Docx (ุชุฌููุจุงู ููุฃุฎุทุงุก). ูุนุชูุฏ ุชุญููู ุจุณูุท ุจุงูุงุณู/ุงููุต ุงููุฑููุน.
# - ุนุฑุถ ุงููููุงุช ุจุงูุนุฑุถ (ูุฑูุช ุฃูููุฉ).
# - ุฃููุงู ูุงุฏุฆุฉ ููุงุถุญุฉ (ุจุฏูู ุฃุณูุฏ ููุง ุฃุฎุถุฑ ูุงูุน).
# - ุชุญููู ููุฑู ุจุญุฌู ุงููููู ูู ุงูุดุฑูุท ุงูุฌุงูุจู.

import streamlit as st
import io

# -------------------------
# ุงูุฅุนุฏุงุฏุงุช ุงูุนุงูุฉ ู ุงูุซูู
# -------------------------
st.set_page_config(
    page_title="Safwa CV Filter",
    page_icon="๐งพ",
    layout="wide",
)

# ููุญุฉ ุฃููุงู ูุทููุฉ (ุจุฏูู ุฃุณูุฏ/ุฃุฎุถุฑ ูุงูุน)
PRIMARY = "#3A6EA5"   # ุฃุฒุฑู ูุงุฏุฆ
ACCENT  = "#E0AFA0"   # ูุฑุฏู ุชุฑุงุจู
BG      = "#F7F7FB"   # ุฎูููุฉ ูุงุชุญุฉ ุฌุฏูุง
CARD    = "#FFFFFF"   # ุฎูููุฉ ุงููุฑูุช
TEXT    = "#1F2937"   # ุฑูุงุฏู ุบุงูู ููุฑูุก
MUTED   = "#6B7280"   # ุฑูุงุฏู ูููุตูุต ุงูุซุงูููุฉ
SUCCESS = "#2E7D32"   # ุฃุฎุถุฑ ุฏุงูู ูุงุฏุฆ ููุชููู/ุงููุจูู
WARN    = "#B45309"   # ุจุฑุชูุงูู ุชูุจูู
FAIL    = "#9B1C1C"   # ุฃุญูุฑ ูุงุฏูุก ููุฑูุถ

# ุญูู CSS ููุชุตููู
st.markdown(
    f"""
    <style>
    .stApp {{
        background: {BG};
        color: {TEXT};
        font-family: "Inter", system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
    }}
    /* ุฃุฒุฑุงุฑ */
    .stButton>button {{
        border-radius: 10px;
        font-weight: 600;
        border: 1px solid rgba(0,0,0,0.06);
    }}
    .stButton>button[kind="primary"] {{
        background: {PRIMARY};
        color: white;
    }}
    /* ูุฏุฎูุงุช */
    .stTextInput>div>div>input,
    .stTextArea textarea,
    .stSelectbox>div>div>div>div,
    .stFileUploader>div {{ 
        background: {CARD};
        border: 1px solid rgba(0,0,0,0.06);
        border-radius: 10px;
        color: {TEXT};
    }}
    /* ุดุงุฑุฉ/Chip ุตุบูุฑุฉ */
    .chip {{
        display:inline-block; 
        padding: 4px 10px; 
        background:{ACCENT}22; 
        border:1px solid {ACCENT}55; 
        border-radius:999px; 
        font-size:12px; 
        margin-right:6px;
    }}
    /* ูุฑุช */
    .card {{
        background:{CARD};
        border: 1px solid rgba(0,0,0,0.06);
        border-radius: 14px;
        padding: 14px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.04);
        height: 100%;
    }}
    .card h4 {{ margin: 0 0 6px 0; }}
    .muted {{ color:{MUTED}; font-size: 13px; }}
    .ok {{ color:{SUCCESS}; font-weight:600; }}
    .warn {{ color:{WARN}; font-weight:600; }}
    .bad {{ color:{FAIL}; font-weight:600; }}
    </style>
    """,
    unsafe_allow_html=True
)

# -------------------------
# ุงูุดุฑูุท ุงูุฌุงูุจู (ูููู + ุฅุนุฏุงุฏุงุช)
# -------------------------
st.sidebar.markdown("### โ๏ธ ุงูุฅุนุฏุงุฏุงุช")

logo_file = st.sidebar.file_uploader("ุงุฑูุน ุงููููู (ุงุฎุชูุงุฑู)", type=["png", "jpg", "jpeg"])
logo_width = st.sidebar.slider("ุญุฌู ุงููููู", min_value=60, max_value=300, value=140, step=10)

if logo_file:
    st.sidebar.image(logo_file, width=logo_width, caption="ุดุนุงุฑ ุงูุชุทุจูู")

preset = st.sidebar.selectbox(
    "Preset (ููุงุชูุญ ุฌุงูุฒุฉ)",
    options=[
        "ุจุฏูู",
        "KSU + MIS",
        "Data/AI Basics",
        "Fresh Graduate"
    ],
    index=0
)

# ููุชุงุญ ุงููููุงุช ุญุณุจ ุงูุจุฑูุณุช
PRESET_KEYWORDS = {
    "ุจุฏูู": [],
    "KSU + MIS": ["ุฌุงูุนุฉ ุงูููู ุณุนูุฏ", "KSU", "MIS", "ูุธู ุงููุนูููุงุช ุงูุฅุฏุงุฑูุฉ", "ูููุฉ ุงูุฅุฏุงุฑุฉ"],
    "Data/AI Basics": ["Python", "SQL", "Excel", "Pandas", "Machine Learning", "Data Analysis"],
    "Fresh Graduate": ["Fresh Graduate", "ุญุฏูุซ ุงูุชุฎุฑุฌ", "Internship", "Co-op", "ุชุฏุฑูุจ ุชุนุงููู"]
}

extra_keywords = st.sidebar.text_area(
    "ูููุงุช ููุชุงุญูุฉ ุฅุถุงููุฉ (ุงุฎุชูุงุฑู) โ ุงูุตูู ุจูููุง ุจูุงุตูุฉ ,",
    placeholder="ูุซุงู: SDAIA, Streamlit, OCR"
)

# ุนุชุจุงุช ุจุณูุทุฉ ูุงุชุฎุงุฐ ูุฑุงุฑ ูุจุฏุฆู
min_hit_for_pass = st.sidebar.slider("ุงูุญุฏ ุงูุฃุฏูู ูุงุนุชุจุงุฑ ุงูุณูุฑุฉ ููุงุณุจุฉ (Hits)", 1, 10, 2)

# -------------------------
# ุฑุฃุณ ุงูุตูุญุฉ
# -------------------------
col_a, col_b = st.columns([0.8, 0.2])
with col_a:
    st.markdown("## ๐งพ Safwa CV Filter โ ุฅุตุฏุงุฑ ุฎููู")
    st.markdown(
        f'<span class="chip">ูุฑุชุจ</span> <span class="chip">ุณุฑูุน</span> <span class="chip">ุจุฏูู ุชุจุนูุงุช</span>',
        unsafe_allow_html=True
    )
with col_b:
    st.markdown("")

st.write("")  # ูุณุงูุฉ ุจุณูุทุฉ

# -------------------------
# ููุทูุฉ ุงูุฑูุน ูุงูุชุญูู
# -------------------------
uploaded_files = st.file_uploader(
    "ุงุฑูุนู ุงูุณูุฑ ุงูุฐุงุชูุฉ (PDF/Docx/Text) โ ุชูุฏุฑูู ุชุฎุชุงุฑูู ุฃูุซุฑ ูู ููู",
    accept_multiple_files=True,
    type=["pdf", "docx", "txt"]
)

search_text = st.text_input(
    "ุฌููุฉ ุจุญุซ (ุงุฎุชูุงุฑู) โ ูุชุญูู ูููุง ุฏุงุฎู ุงูููู ูู ุชูููุฑ ูุต",
    placeholder="ูุซุงู: King Saud University ูุธู ุงููุนูููุงุช ุงูุฅุฏุงุฑูุฉ Python"
)

go = st.button("ุงุจุฏุฃ ุงููุฑุฒ ุงูุขู โ", type="primary", use_container_width=True)

# -------------------------
# ุฏูุงู ูุณุงุนุฏุฉ
# -------------------------
def safe_sniff_text(file) -> str:
    """
    ูุญุงููุฉ ุจุณูุทุฉ ููุฑุงุกุฉ ุฌุฒุก ูู ุงููุต ุจุฏูู ุชุจุนูุงุช.
    - ูููุงุช txt: ููุฑุงูุง ูุจุงุดุฑุฉ
    - ุบูุฑ ุฐูู: ููุชูู ุจุนุฑุถ ุงูุงุณู (ุชุฌููุจุงู ูุฃุฎุทุงุก ุญุฒู PDF/Docx)
    """
    try:
        name = file.name.lower()
        if name.endswith(".txt"):
            # ูุนูุฏ ุฃูู 10KB ูุฃูุตู ุญุฏ
            raw = file.read(10_000)
            try:
                return raw.decode("utf-8", errors="ignore")
            except Exception:
                return raw.decode("latin-1", errors="ignore")
        else:
            # ูุง ูุญุงูู ูุชุญ PDF/Docx ููุง ุนุดุงู ูุง ููุดู ุจุฏูู ููุชุจุงุช
            return ""
    except Exception:
        return ""

def score_file(name: str, peek_text: str, keywords: list[str]) -> dict:
    """
    ูุญุณุจ Hits ูุจุณูุทุฉ ุจุงูุงุนุชูุงุฏ ุนูู ุงูุงุณู + ุฌุฒุก ุงููุต ุงูููุฑูุก (ูู ููุฌูุฏ .txt).
    """
    target = (name + " " + peek_text).lower()
    hits = 0
    hit_terms = []
    for kw in keywords:
        if not kw:
            continue
        if kw.lower() in target:
            hits += 1
            hit_terms.append(kw)
    # ูุนูุงุฑ ูุจูู ูุจุฏุฆู
    decision = "ููุงุณุจ" if hits >= min_hit_for_pass else "ูุญุชุงุฌ ูุฑุงุฌุนุฉ"
    return {"hits": hits, "hit_terms": hit_terms, "decision": decision}

# ุชุญุถูุฑ ูุงุฆูุฉ ุงููููุงุช
keywords = PRESET_KEYWORDS.get(preset, []).copy()
if extra_keywords.strip():
    for piece in extra_keywords.split(","):
        kw = piece.strip()
        if kw:
            keywords.append(kw)

if search_text.strip():
    # ูุนุชุจุฑ ูู ูููุฉ ููุชุงุญูุฉ ูุฑุฏูุฉ ูู ุญูู ุงูุจุญุซ (ุชูุฑูุจ ุจุณูุท)
    for token in search_text.split():
        if token.strip():
            keywords.append(token.strip())

# -------------------------
# ุนุฑุถ ุงููุชุงุฆุฌ (ูุฑูุช ุจุงูุนุฑุถ)
# -------------------------
if go:
    if not uploaded_files:
        st.warning("ุงุฑูุนู ูููุงุช ุฃูููุง.")
    else:
        st.markdown("### ุงููุชุงุฆุฌ")
        # ูุนุฑุถ ุงููููุงุช ุนูู ุตููู ุฃูููุฉ 3 ูู ูู ุตู
        CHUNK = 3
        for i in range(0, len(uploaded_files), CHUNK):
            row = uploaded_files[i:i+CHUNK]
            cols = st.columns(len(row))
            for c, f in zip(cols, row):
                with c:
                    # ูุฑุงุกุฉ ูุต (ุขูู)
                    # ููู: ูุฑุฌูุน ูุคุดุฑ ุงูููู ููุจุฏุงูุฉ ุจุนุฏ ุฃู read
                    peek = safe_sniff_text(f)
                    try:
                        f.seek(0)
                    except Exception:
                        pass

                    result = score_file(f.name, peek, keywords)

                    # ุจุทุงูุฉ
                    st.markdown(
                        f"""
                        <div class="card">
                            <h4>{f.name}</h4>
                            <div class="muted">Hits: {result['hits']} โ 
                            {"<span class='ok'>ููุงุณุจ</span>" if result['decision']=="ููุงุณุจ" else "<span class='warn'>ูุญุชุงุฌ ูุฑุงุฌุนุฉ</span>"}
                            </div>
                        """,
                        unsafe_allow_html=True
                    )

                    if result["hit_terms"]:
                        st.markdown(
                            "ุงููููุงุช ุงููุทุงุจูุฉ: " + " โข ".join([f"`{t}`" for t in result["hit_terms"]])
                        )
                    else:
                        st.markdown("<span class='muted'>ูุง ุชูุฌุฏ ุชุทุงุจูุงุช ูุงุถุญุฉ</span>", unsafe_allow_html=True)

                    with st.expander("ูุนุงููุฉ ุณุฑูุนุฉ"):
                        if peek:
                            st.text(peek[:1000])
                        else:
                            st.caption("ูุง ุชูุฌุฏ ูุนุงููุฉ ูุตูุฉ (ููู PDF/Docx). ุงููุนุงูุฌุฉ ุงููุตูุฉ ุงููุงููุฉ ุบูุฑ ููุนููุฉ ูู ูุฐุง ุงูุฅุตุฏุงุฑ ุงูุฎููู.")

                    st.markdown("</div>", unsafe_allow_html=True)

        # ููุงุญุธุงุช ุฎูููุฉ
        st.info(
            "ูุฐุง ุฅุตุฏุงุฑ ุฎููู ุจุฏูู ุงุณุชุฎุฑุงุฌ ูุต ูู PDF/Docx ูุชูุงุฏู ูุดุงูู ุงูุชุจุนูุงุช. "
            "ูู ุชุจูู ุฅุตุฏุงุฑ ุงุญุชุฑุงูู ุจุงุณุชุฎุฑุงุฌ ูุต ุฏููู ูุฏุนู OCR ุจููุนููู ูู ุจูุณุฎุฉ ุซุงููุฉ."
        )

# -------------------------
# ุชุฐููู
# -------------------------
st.markdown("---")
st.caption(
    f"ุงููุงุฌูุฉ ุจุฃููุงู ูุงุฏุฆุฉ โข ุจุฏูู ุฃุณูุฏ/ุฃุฎุถุฑ ูุงูุน โข ุชุญูู ุจุญุฌู ุงููููู ูู ุงูุดุฑูุท ุงูุฌุงูุจู โข ุงูุนุฑุถ ุฃููู ุจุงููุฑูุช."
)